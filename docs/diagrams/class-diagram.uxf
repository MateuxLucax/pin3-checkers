<diagram program="umletino" version="15.0.0"><zoom_level>10</zoom_level><help_text>Space for diagram notes</help_text><element><id>UMLClass</id><coordinates><x>110</x><y>155</y><w>230</w><h>260</h></coordinates><panel_attributes>CheckersState
--
-board: Board
-whiteToMove: boolean
-status: Status
-actions: Action[]
-pieceCount = Map&lt;int&gt;
-roundsSinceCapture: int
-roundsSincePawnMove: int
--
#copy(): CheckersState
#equals(that: CheckersState): boolean
#actionDo(action: Action): void
#actionUndo(action: Action): void
#handleChange(): void
#inSpecialEnding(): boolean
#calculateStatus(): Status
#generateActions(): Action</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>185</y><w>110</w><h>80</h></coordinates><panel_attributes>Position
--
-col: int
-row: int
-piece: Piece</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>275</y><w>100</w><h>60</h></coordinates><panel_attributes>Piece
--
-white: boolean
-king: boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>355</y><w>130</w><h>60</h></coordinates><panel_attributes>Action
--
-from: Position
-sequence: Position[]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>360</x><y>65</y><w>110</w><h>110</h></coordinates><panel_attributes>&lt;&lt;enumeration&gt;&gt;
Status
--
-playing
-whiteWon
-blackWon
-draw</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>270</x><y>85</y><w>70</w><h>50</h></coordinates><panel_attributes>Board
--
-Piece[][]</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>110</x><y>435</y><w>180</w><h>80</h></coordinates><panel_attributes>BoardView
--
-tableElement: Document
-pieceMatrix: Board
--
#render(board: Board): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>110</x><y>535</y><w>440</w><h>130</h></coordinates><panel_attributes>Minimax
--
-maximizeWhite: boolean
-heuristicFunction: Function(state: CheckersState, maximizeWhite: boolean)
-cutoffDepth: int
--
#resetLeafCount(): void
#getLeafCount(): int
#val(state: CheckersState, depth: int, alpha: int, beta: int)</panel_attributes><additional_attributes></additional_attributes></element></diagram>